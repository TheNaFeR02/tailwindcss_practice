import React, { useState, useRef } from 'react';
import './App.css';

function App() {
  const [image, setImage] = useState(null);
  const videoRef = useRef(null);

  const startCamera = async () => {
    try {
      const stream = await navigator.mediaDevices.getUserMedia({ video: true });
      videoRef.current.srcObject = stream;
    } catch (error) {
      console.error('Error accessing camera:', error);
    }
  };

  const capturePhoto = () => {
    const canvas = document.createElement('canvas');
    canvas.width = videoRef.current.videoWidth;
    canvas.height = videoRef.current.videoHeight;
    canvas.getContext('2d').drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);

    const photoURL = canvas.toDataURL('image/png');
    setImage(photoURL);
  };

  return (
    <div className="App">
      <h1>Camera App</h1>
      <div>
        <button onClick={startCamera}>Start Camera</button>
        <button onClick={capturePhoto}>Capture Photo</button>
      </div>
      <div>
        {image && <img src={image} alt="Captured" />}
      </div>
      <video ref={videoRef} autoPlay style={{ display: image ? 'none' : 'block' }} />
    </div>
  );
}

export default App;

______________________________________________________________________________________________


import React, { useRef, useState } from 'react';
import SignatureCanvas from 'react-signature-canvas';
import CustomInput from './CustomSelect';

function App() {
  const sigCanvasRef = useRef({});
  const [signature, setSignature] = useState(null);

  const handleClear = () => {
    sigCanvasRef.current.clear();
    setSignature(null);
  };

  const handleSave = () => {
    if (sigCanvasRef.current.isEmpty()) {
      alert('Firma vacía. Por favor, firma antes de guardar.');
    } else {
      const signatureData = sigCanvasRef.current.toDataURL(); // Puedes cambiar a toSvg() para obtener un SVG en lugar de una imagen.
      setSignature(signatureData);
    }
  };

  return (
    <div className="App">
      <h1>Captura de Firma Digital</h1>
      <SignatureCanvas
        ref={sigCanvasRef}
        canvasProps={{ width: 500, height: 200, className: 'signature-canvas' }}
      />
      <div>
        <button onClick={handleClear}>Limpiar</button>
        <button onClick={handleSave}>Guardar Firma</button>
      </div>
      {signature && (
        <div>
          <h2>Firma Capturada:</h2>
          <img src={signature} alt="Firma Capturada" />
        </div>
      )}
    </div>
  );
}

export default App;